diff -Nur mongodb-src-r2.4.4.orig/src/mongo/db/auth/privilege_set.cpp mongodb-src-r2.4.4/src/mongo/db/auth/privilege_set.cpp
--- mongodb-src-r2.4.4.orig/src/mongo/db/auth/privilege_set.cpp	2013-06-16 20:57:57.411195496 +0200
+++ mongodb-src-r2.4.4/src/mongo/db/auth/privilege_set.cpp	2013-06-30 12:37:08.567699530 +0200
@@ -79,7 +79,7 @@
         resourceSearchList[1] = nsToDatabaseSubstring(desiredPrivilege.getResource());
 
         ActionSet unmetRequirements = desiredPrivilege.getActions();
-        for (int i = 0; i < boost::size(resourceSearchList); ++i) {
+        for (int i = 0; i < static_cast<int>(boost::size(resourceSearchList)); ++i) {
             ResourcePrivilegeCacheEntry* entry = _lookupEntry(resourceSearchList[i]);
             if (NULL == entry)
                 continue;
diff -Nur mongodb-src-r2.4.4.orig/src/mongo/db/cmdline_test.cpp mongodb-src-r2.4.4/src/mongo/db/cmdline_test.cpp
--- mongodb-src-r2.4.4.orig/src/mongo/db/cmdline_test.cpp	2013-06-16 20:57:57.399197914 +0200
+++ mongodb-src-r2.4.4/src/mongo/db/cmdline_test.cpp	2013-06-30 12:37:08.571700380 +0200
@@ -102,7 +102,7 @@
             "--servicePassword",
             "xxxxxxxxxxxxxxxx"
         };
-        ASSERT_EQUALS(boost::size(expected), argc);
+        ASSERT_EQUALS(static_cast<int>(boost::size(expected)), argc);
 
         testCensoringArgv(expected, argv, argc);
     }
@@ -134,7 +134,7 @@
             "-servicePassword",
             "xxxxxxxxxxxxxxxx"
         };
-        ASSERT_EQUALS(boost::size(expected), argc);
+        ASSERT_EQUALS(static_cast<int>(boost::size(expected)), argc);
 
         testCensoringArgv(expected, argv, argc);
     }
@@ -183,7 +183,7 @@
             "--servicePassword",
             "<password>"
         };
-        ASSERT_EQUALS(boost::size(expected), argc);
+        ASSERT_EQUALS(static_cast<int>(boost::size(expected)), argc);
 
         testCensoringVector(expected, argv, argc);
     }
@@ -215,7 +215,7 @@
             "-servicePassword",
             "<password>"
         };
-        ASSERT_EQUALS(boost::size(expected), argc);
+        ASSERT_EQUALS(static_cast<int>(boost::size(expected)), argc);
 
         testCensoringVector(expected, argv, argc);
     }
